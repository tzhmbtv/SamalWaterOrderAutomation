"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏ —Ä–∞–±–æ—Ç—ã Samal API
"""
import logging
from samal_api import SamalAPI
from config import PRODUCTS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è requests
logging.getLogger("urllib3").setLevel(logging.DEBUG)


def test_add_to_cart():
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É"""
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É")
    print("="*50)
    
    api = SamalAPI()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –≤–æ–¥–æ–π 18,9–ª (product_id = 224)
    product_id = 224
    quantity = 2
    
    print(f"\nüì¶ –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É:")
    print(f"   Product ID: {product_id}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}")
    
    result = api.add_to_cart(product_id, quantity)
    
    if result:
        print("‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")
        print(f"   Cookies: {api.session.cookies.get_dict()}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É")
    
    return api, result


def test_get_checkout_page(api):
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã checkout"""
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
    print("="*50)
    
    html = api.get_checkout_page()
    
    if html:
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ checkout –ø–æ–ª—É—á–µ–Ω–∞!")
        print(f"   –†–∞–∑–º–µ—Ä HTML: {len(html)} –±–∞–π—Ç")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        with open('checkout_page.html', 'w', encoding='utf-8') as f:
            f.write(html)
        print("   üíæ HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: checkout_page.html")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        checks = {
            '–§–æ—Ä–º–∞ checkout': 'woocommerce-checkout' in html,
            '–ü–æ–ª–µ –∏–º–µ–Ω–∏': 'billing_first_name' in html,
            '–ü–æ–ª–µ –∞–¥—Ä–µ—Å–∞': 'billing_address_1' in html,
            '–ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞': 'billing_phone' in html,
            'Nonce –ø–æ–ª–µ': 'woocommerce-process-checkout-nonce' in html,
        }
        
        print("\n   –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã:")
        for check_name, check_result in checks.items():
            status = "‚úÖ" if check_result else "‚ùå"
            print(f"   {status} {check_name}")
        
        return html
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É checkout")
        return None


def test_extract_nonce(api, html):
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è nonce"""
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 3: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ nonce –∏–∑ HTML")
    print("="*50)
    
    if not html:
        print("‚ùå HTML –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        return None
    
    nonce = api.extract_nonce(html)
    
    if nonce:
        print(f"‚úÖ Nonce –∏–∑–≤–ª–µ—á–µ–Ω: {nonce}")
        return nonce
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å nonce")
        return None


def test_full_order():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∑–∞–∫–∞–∑–∞ (–ë–ï–ó —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)"""
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 4: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞–∫–∞–∑–∞ (DRY RUN)")
    print("="*50)
    
    api = SamalAPI()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    product_id = 224  # –í–æ–¥–∞ 18,9–ª
    quantity = 2
    test_user_data = {
        'first_name': '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        'phone': '+77771234567',
        'address': '–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞ 1, –∫–≤. 1',
        'comment': '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ - –ù–ï –í–´–ü–û–õ–ù–Ø–¢–¨'
    }
    
    print(f"\nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–∫–∞–∑–∞:")
    print(f"   Product ID: {product_id}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}")
    print(f"   –ò–º—è: {test_user_data['first_name']}")
    print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {test_user_data['phone']}")
    print(f"   –ê–¥—Ä–µ—Å: {test_user_data['address']}")
    
    # –®–∞–≥ 1: –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
    print("\nüîÑ –®–∞–≥ 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É...")
    if not api.add_to_cart(product_id, quantity):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É")
        return False
    print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
    
    # –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É checkout
    print("\nüîÑ –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã checkout...")
    html = api.get_checkout_page()
    if not html:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É checkout")
        return False
    print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ checkout –ø–æ–ª—É—á–µ–Ω–∞")
    
    # –®–∞–≥ 3: –ò–∑–≤–ª–µ–∫–∞–µ–º nonce
    print("\nüîÑ –®–∞–≥ 3: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ nonce...")
    nonce = api.extract_nonce(html)
    if not nonce:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å nonce")
        return False
    print(f"‚úÖ Nonce –∏–∑–≤–ª–µ—á–µ–Ω: {nonce}")
    
    # –®–∞–≥ 4: –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ (–ë–ï–ó –æ—Ç–ø—Ä–∞–≤–∫–∏)
    print("\nüîÑ –®–∞–≥ 4: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞...")
    form_data = {
        'billing_first_name': test_user_data['first_name'],
        'billing_address_1': test_user_data['address'],
        'billing_phone': test_user_data['phone'],
        'comments': test_user_data['comment'],
        'woocommerce-process-checkout-nonce': nonce,
    }
    
    print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã:")
    for key, value in form_data.items():
        print(f"   {key}: {value}")
    
    print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ù–ï –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
    print("   –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ")
    print("   —Å—Ç—Ä–æ–∫—É result = api.place_order(test_user_data)")
    
    return True


def test_session_cookies():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å cookies –∏ —Å–µ—Å—Å–∏–µ–π"""
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 5: Cookies –∏ —Å–µ—Å—Å–∏—è")
    print("="*50)
    
    api = SamalAPI()
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    print("\nüîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    response = api.session.get("https://samal.kz/shop/")
    
    print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
    print(f"‚úÖ Cookies –ø–æ–ª—É—á–µ–Ω—ã: {len(api.session.cookies)} —à—Ç.")
    
    for cookie in api.session.cookies:
        print(f"   üç™ {cookie.name}: {cookie.value[:50]}...")
    
    print(f"\n‚úÖ Headers –∑–∞–ø—Ä–æ—Å–∞:")
    for key, value in api.session.headers.items():
        print(f"   {key}: {value}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("\n" + "üö∞"*25)
    print("–û–¢–õ–ê–î–ö–ê SAMAL API")
    print("üö∞"*25)
    
    try:
        # –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
        api, cart_result = test_add_to_cart()
        
        if not cart_result:
            print("\n‚ö†Ô∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É")
            return
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ checkout
        html = test_get_checkout_page(api)
        
        # –¢–µ—Å—Ç 3: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ nonce
        if html:
            test_extract_nonce(api, html)
        
        # –¢–µ—Å—Ç 4: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª
        print("\n")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∑–∞–∫–∞–∑–∞...")
        test_full_order()
        
        # –¢–µ—Å—Ç 5: –°–µ—Å—Å–∏—è –∏ cookies
        print("\n")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ cookies –∏ —Å–µ—Å—Å–∏–∏...")
        test_session_cookies()
        
        print("\n" + "="*50)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
        print("="*50)
        print("\nüí° –°–æ–≤–µ—Ç—ã –ø–æ –æ—Ç–ª–∞–¥–∫–µ:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª checkout_page.html –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ cookies —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ nonce –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   4. –õ–æ–≥–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å API")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()


if __name__ == '__main__':
    main()

